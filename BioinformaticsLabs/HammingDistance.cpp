//
//  main.cpp
//  Lab2
//
//  Created by Jeremy Sommers on 8/26/17.
//  Copyright Â© 2017 Jeremy Sommers. All rights reserved.
//

#include <iostream>
#include <string>
#include <fstream>
#include <map>

using namespace std;

/*
 *  Problem 1
 *
 */

int hammingDistance(string a, string b) {
    if (a.length() == b.length()) {
        int d = 0;
        for (int i = 0; i < a.length(); i++) {
            if (a.at(i) != b.at(i))
                d++;
        }
        return d;
    }
    else
        return -1;
}

int main(int argc, const char * argv[]) {
    string s = "GAGTTAACGAACGCTTAAC";
   // sequenceFinder(s, 3);
    string a = "TheQuickBrownFoxJumpsOverTheLayDog";
   // sequenceFinder(a, 1);
    string m = "ACGTTGCATGTCGCATGATGCATGAGAGCT";
    //sequenceFinder(m, 4);
    string txt = "CGGAAGCGAGATTCGCGTGGCGTGATTCCGGCGGGCGTGGAGAAGCGAGATTCATTCAAGCCGGGAGGCGTGGCGTGGCGTGGCGTGCGGATTCAAGCCGGCGGGCGTGATTCGAGCGGCGGATTCGAGATTCCGGGCGTGCGGGCGTGAAGCGCGTGGAGGAGGCGTGGCGTGCGGGAGGAGAAGCGAGAAGCCGGATTCAAGCAAGCATTCCGGCGGGAGATTCGCGTGGAGGCGTGGAGGCGTGGAGGCGTGCGGCGGGAGATTCAAGCCGGATTCGCGTGGAGAAGCGAGAAGCGCGTGCGGAAGCGAGGAGGAGAAGCATTCGCGTGATTCCGGGAGATTCAAGCATTCGCGTGCGGCGGGAGATTCAAGCGAGGAGGCGTGAAGCAAGCAAGCAAGCGCGTGGCGTGCGGCGGGAGAAGCAAGCGCGTGATTCGAGCGGGCGTGCGGAAGCGAGCGG";
    hammingDistance(s, a);
    /*ifstream io;
    
    io.open("shortText.txt");
    
    if(!io) {
        cerr << "Can't find the file." << endl;
        exit(1);
    }
    string test = "";
    while (io.good()) {
        char a = io.get();
        if (a != '\377')
            test += a;
    }
    io.close();
    sequenceFinder(test, 12);
    string t = "CATGGGCATCGGCCATACGCC";
    
    //int length = t.length();*/
    
    ifstream file;
    
    file.open("rosalind_ba1f.txt");
    if (!file) {
        cerr << "Can't find the file." << endl;
        exit(1);
    }
    string bigstring = "";
    while (file.good()) {
        char c = file.get();
        if (c != '\377')
        bigstring += c;
    }
   // cout << bigstring << endl;
    //file.close();
    //skew(bigstring);
    string q = "GTAGCTGGCACGGTACCGCGATTTTTAATTTCTGGATATACGCGAAACAGAGGAACCACCATGGTCTTAGGCCGTATGGAGGTAACTGCTGGTTGTAATGCGGCATCTCTCAAGGTGACAAAGGATTAAACATAACAGCGGAGTTAGTTTTGGGGACAGGACCCTCGTTCCTACCTAGTTCTTTTGAGCGGCGGGATTTCCTTGAGATGGCCACTAATTCGACCTACTCGTTAGAACAGCATCACATCCTGGGTGGTGGTTGTTGCCTAACTCGATATCGGGGTCGATGCAGCACGAGCTGTGACAGCAGGAATCGGAGCGCAATCACCGACTTTGATAAGCATTGTGCAGGCAAAGAAGGCTGTATTAGAGGGTATCTGTATCAGAGCCAGTAAGTACTTAATCCTACGCGAGGCCACAGTGGGGGAAAGGCTTATGTGGGTTCCGCGGTCGGAACAGTAATAGGACTGACTCCTGTGCCCCGGGGCCATGACATGTTCCGGATTTGGGAGCGCGTTATGCACACAGTGCATTCTTGCCTTAGTTTAACCTTCGCACCAAAAGGACGGGGGGAACAGCTCTGTAGCGGTAAATTAAGTGTTTCCTTCTTGAACCCTCGGTTTTAAGTACCGCTGAGCAATATTAATGCAATGACTCCAAATGGTACTCACTTTGGCTCTAGTAAGTCGAAGAAGCAGACACCTTTAAGGATCCGAGTATAGGCAATTACATGGCCCAATGCTTTAGAGGATCGGCTAAGTACAACTTAAACACGCCCCCCGAGGCAATTAGGTTCCCGTCTTTGTCCTGGGCACTAATCGTTCCGCCCTCAGACCCTCCAGTCTGAAATCCTCCTTAGCGGCGGGTCATTACCAGTACCCATAGGCGTCACCCTATGTCTCGTTGGAGTCGTGCGTACTTAGAATGCCCCCGCGTTCCCCCTATAGTTATCAAGCAGAAACGTAATACACTAGCTTACACGGCGCAACTTGTAAGAAAAGGCAACCTATATAGTAGGAGCTGCTT";
    
    string r = "GCTAAATCTAGTAGGACTGAATGGTCTTTCGTAAAAATAATCTCTGTGACACATTAGTGACCAAAAAGTGTCTGTGTGCTCCACGTATTAAAGCGCAGCGTCTGTCTCGCCTAGACACTAGTAAATTCACGACAGTACCCCGTGTCTTATCAAGGCTATGAAGCCAATGGCAACACGGCTCGACAGGAGGGCTGAAACGGGCCGTTGCCATGAGCCGGAGGGTAGCTAAGTCTCATGCTATCAATTCCAGATCGAACGGGTCATAAGAGCTGCTCCGCTGCAGAGACGCGCAGTCCCTCGATGCACGTGGACCTCCAGAACCAAATGCCGTATTTATCCTGCCGATATGCCTAGCGTGTGCCGAAAGGAATCCGACCGCCGTAAGCTGCTGACTCTACAGCCGGTTCGATTTACTTGCTCCGATGGTAAGCCAATAGTCTTATTGATAGACGCATTGGTAGGCCACGCTCGACGATCCCGTAAAGTATTACACCCTCGTCTCATGAGGCACAGACTAATGACTCCGTGCGCTTTCACCCAGTGGTCTGGTCGCCGTTGCGTTGGGATGGCAGTAAACTTTCACGTGGCCCTATGGTGTACGATACTATAAATATAAAGATCGGGCTCAAGTGATGTGCATTACAATCGTGCACGATCCCTCAAAGGCGACAACCCATGTGGACCGTTACTTAGGGCTGGGGTAGACTAGGGAAGCAGTTATATACCGACGTAGTCCGTAACTCATATTGGTTGATAGTGGCGAGTCAATCAGGCCGACTCCCTAACCGTACCTTCGGTGTTACAATTGTGGAATACAACGTGCATTCAACGACTGGCAAGAGCGCTTACGACTATCCCTCCACCTTCACGCTGTGGGACGGTATAGCCACCAGACATGGAAAGGGTGACCTTTGGACATATCACAGGAGCGGTTAGCTGTCCTTAGGAATAACAGGTGCCTGCTGACGCTATGCTCGCCCATTGAATTGTGTGTACTACGGTTATCGGGGTATGATTTCACAGGGA";
    
    cout << hammingDistance(q, r) << endl;
    return 0;
}